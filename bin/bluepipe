#!/usr/bin/env python
"""
Wrapper script for running the BLUEPRINT pipeline
"""
import argparse
import sys
import os
import json
from subprocess import call
import contextlib

slurm_snake_params = ["--immediate-submit",
                      "-j", "999",
                      "--cluster", "Snakefile_sbatch.py {dependencies}"]

def load_config():
    configfile = "config.json"
    return json.load(open(configfile, 'r'))

@contextlib.contextmanager
def cd(path):
    """A context manager which changes the working directory to the given
       path, and then changes it back to its previous value on exit.

    """
    prev_cwd = os.getcwd()
    os.chdir(path)
    yield
    os.chdir(prev_cwd)

def quantify_all(args, config):
    """Run snakemake for the rule quantify_all"""
    if 'SNIC_RESOURCE' in os.environ:
        snake_params = slurm_snake_params
    else:
        snake_params = []
    if args.dryrun:
        snake_params.append("--dryrun")
    directory = config["tasks"]["pipeline"]["directory"]
    snakefile = config["tasks"]["pipeline"]["snakefile"]
    with cd(directory):
        call(["snakemake", "quantify_all", "--snakefile", snakefile, "--config", "spurious=madeup"] + snake_params)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=__doc__)
    parser.set_defaults(func=quantify_all)
    parser.add_argument('--dryrun', action="store_true", help="Run snakemake with dryrun set, will not execute anything") 
    config = load_config()
    args = parser.parse_args()
    args.func(args, config)
